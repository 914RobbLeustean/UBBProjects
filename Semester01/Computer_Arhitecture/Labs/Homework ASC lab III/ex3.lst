     1                                  bits 32         ; Assembling for the 32-bit architecture
     2                                  global start    ; Declare the 'start' label as the entry point of the program
     3                                  
     4                                  extern exit     ; Inform the assembler that the 'exit' symbol is external (defined in an external library)
     5                                  import exit msvcrt.dll  ; Specify that 'exit' is defined in the msvcrt.dll library
     6                                  
     7                                  section .data   ; Data section
     8                                     
     9 00000000 09                         b db 9
    10 00000001 0800                       c dw 8
    11 00000003 05000000                   a dd 5
    12 00000007 0A00000000000000           x dq 10
    13                                     
    14                                     
    15                                      
    16                                      
    17                                  section .text   ; Code section ;Am avut de rezolvat: (a+b/c-1)/(b+2)-x (ex5) ; a-doubleword; b-byte; c-word; x-qword
    18                                  start:
    19 00000000 A0[00000000]                        mov AL, [b]
    20 00000005 B400                                mov AH, 0
    21 00000007 66BA0000                            mov DX, 0
    22 0000000B 660305[03000000]                    add AX, [a]; DX = a + b 
    23 00000012 6683D201                            adc DX, 1; added line
    24 00000016 66832D[01000000]01                  sub word [c], 1; c = c - 1
    25 0000001E 668B0D[01000000]                    mov CX, [c]
    26 00000025 66F7F1                              div CX; AX = (a+b) / c - 1, DX = (a+1) % c - 1
    27 00000028 8005[00000000]02                    add byte [b], 2; b = b + 2
    28 0000002F B800000000                          mov EAX, 0
    29 00000034 A0[00000000]                        mov AL, [b]
    30 00000039 B400                                mov AH, 0
    31 0000003B 66BA0000                            mov DX, 0
    32 0000003F 66F7F3                              div BX; AX = a+b/c-1)/(b+2), DX = (a+b/c-1) % b + 2
    33 00000042 66A3[00000000]                      mov [b], AX
    34 00000048 A1[00000000]                        mov EAX, [b]
    35 0000004D BA00000000                          mov EDX, 0
    36 00000052 2B05[07000000]                      sub EAX, [x]
    37 00000058 1B15[0B000000]                      sbb EDX, [x+4]; store the result in EDX:EAX
    38                                              
    39                                              
    40                                              
    41                                              
    42                                              
    43                                              
    44                                              
    45                                              
    46                                              
    47                                              
    48                                        
    49                                        
    50                                        
    51                                        
    52                                        
    53                                  
    54                                      ; Call 'exit(0)' to end the program (0 represents a success status)
    55 0000005E 6A00                        push dword 0  ; Push the parameter (status code) onto the stack
    56 00000060 FF15[00000000]              call [exit]   ; Call the 'exit' function to exit the program
    57                                      
