     1                                  bits 32         ; Assembling for the 32-bit architecture
     2                                  global start    ; Declare the 'start' label as the entry point of the program
     3                                  
     4                                  extern exit     ; Inform the assembler that the 'exit' symbol is external (defined in an external library)
     5                                  import exit msvcrt.dll  ; Specify that 'exit' is defined in the msvcrt.dll library
     6                                  
     7                                  section .data   ; Data section
     8                                     
     9 00000000 05000000                   a dd 5
    10 00000004 06                         b db 6
    11 00000005 0200                       c dw 2
    12 00000007 0A00000000000000           x dq 10
    13                                     
    14                                     
    15                                      
    16                                      
    17                                  section .text   ; Code section ;Am avut de rezolvat: (a+b/c-1)/(b+2)-x (ex5) ; a-doubleword; b-byte; c-word; x-qword
    18                                  start:
    19 00000000 66832D[05000000]01              sub word [c], 1; c = c - 1
    20 00000008 A0[04000000]                    mov AL, [b]
    21 0000000D 6698                            cbw; AX = AL 
    22 0000000F 660305[00000000]                add AX, [a];AX = a + b 
    23 00000016 668B0D[05000000]                mov CX, [c]; CX = c 
    24 0000001D 66BA0000                        mov DX, 0
    25 00000021 66F7F1                          div CX; AX = (a+b) / c - 1 ; DX = (a+b) % c - 1
    26 00000024 8005[04000000]02                add byte [b], 2; b = b + 2
    27 0000002B 6689C3                          mov BX, AX; BX = AX 
    28 0000002E A0[04000000]                    mov AL, [b]
    29 00000033 6698                            cbw; AX = AL
    30 00000035 6689C1                          mov CX, AX; CX = AX
    31 00000038 6689D8                          mov AX, BX; BX = AX
    32 0000003B 66F7F1                          div CX; AX = (a+b/c-1)/(b+2)
    33 0000003E 98                              cwde; AX -> EAX
    34 0000003F 99                              cdq; EAX -> EDX:EAX
    35 00000040 2B05[07000000]                  sub EAX, [x];
    36                                          
    37                                  
    38                                  
    39                                  
    40                                          
    41                                  
    42                                      ; Call 'exit(0)' to end the program (0 represents a success status)
    43 00000046 6A00                        push dword 0  ; Push the parameter (status code) onto the stack
    44 00000048 FF15[00000000]              call [exit]   ; Call the 'exit' function to exit the program
    45                                      
