     1                                  bits 32         ; Assembling for the 32-bit architecture
     2                                  global start    ; Declare the 'start' label as the entry point of the program
     3                                  
     4                                  extern exit     ; Inform the assembler that the 'exit' symbol is external (defined in an external library)
     5                                  import exit msvcrt.dll  ; Specify that 'exit' is defined in the msvcrt.dll library
     6                                  
     7                                  section .data   ; Data section
     8 00000000 0200                        a dw 2 
     9 00000002 0300                        b dw 3 
    10 00000004 0A00                        c dw 10
    11 00000006 0500                        d dw 5
    12 00000008 0000                        result dw 0
    13                                      
    14                                  section .text   ; Code section ;Am avut de rezolvat:(c+b+b)-(c+a+d) (ex5)
    15                                  start:
    16 00000000 66A1[00000000]              mov AX, [a]
    17 00000006 668B1D[02000000]            mov BX, [b]
    18 0000000D 668B0D[04000000]            mov CX, [c] 
    19 00000014 668B15[06000000]            mov DX, [d]
    20                                      
    21                                      
    22 0000001B 6601DB                      add BX, BX; b+b
    23 0000001E 6601D9                      add CX, BX; c + b + b
    24 00000021 6689CB                      mov BX, CX; BX = c + b + b
    25 00000024 668B0D[04000000]            mov CX, [c]; CX = c 
    26 0000002B 6601C1                      add CX, AX; c + a
    27 0000002E 6601D1                      add CX, DX; c + a + d 
    28 00000031 6629CB                      sub BX, CX; (c+b+b)-(c+a+d)
    29 00000034 66891D[08000000]            mov [result], BX
    30                                      
    31                                     
    32                                      
    33                                      
    34                                      ; Call 'exit(0)' to end the program (0 represents a success status)
    35 0000003B 6A00                        push dword 0  ; Push the parameter (status code) onto the stack
    36 0000003D FF15[00000000]              call [exit]   ; Call the 'exit' function to exit the program
    37                                      
