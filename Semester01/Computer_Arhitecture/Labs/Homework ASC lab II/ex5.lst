     1                                  bits 32         ; Assembling for the 32-bit architecture
     2                                  global start    ; Declare the 'start' label as the entry point of the program
     3                                  
     4                                  extern exit     ; Inform the assembler that the 'exit' symbol is external (defined in an external library)
     5                                  import exit msvcrt.dll  ; Specify that 'exit' is defined in the msvcrt.dll library
     6                                  
     7                                  section .data   ; Data section
     8                                       
     9 00000000 0500                        a dw 5
    10 00000002 0300                        b dw 3
    11 00000004 0800                        c dw 8
    12 00000006 0200                        d dw 2
    13 00000008 0000                        result dw 0
    14                                      
    15                                  section .text   
    16                                  start:
    17                                  
    18                                      
    19 00000000 66A1[00000000]              mov ax, [a]
    20 00000006 668B1D[02000000]            mov bx, [b]
    21 0000000D 668B0D[04000000]            mov cx, [c]
    22 00000014 668B15[06000000]            mov dx, [d]
    23                                  
    24                                      
    25 0000001B 6601DB                      add bx, bx  ; b + b
    26 0000001E 6601D9                      add cx, bx  ; c + (b + b)
    27 00000021 6629C1                      sub cx, ax  ; (c + b + b) - a
    28 00000024 6629D1                      sub cx, dx  ; ((c + b + b) - a) - d
    29                                  
    30                                      
    31 00000027 66890D[08000000]            mov [result], cx
    32                                  
    33                                      ; Call 'exit(0)' to end the program (0 represents a success status)
    34 0000002E 6A00                        push dword 0  ; Push the parameter (status code) onto the stack
    35 00000030 FF15[00000000]              call [exit]   ; Call the 'exit' function to exit the program
