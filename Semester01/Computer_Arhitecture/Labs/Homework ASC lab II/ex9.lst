     1                                  bits 32         ; Assembling for the 32-bit architecture
     2                                  global start    ; Declare the 'start' label as the entry point of the program
     3                                  
     4                                  extern exit     ; Inform the assembler that the 'exit' symbol is external (defined in an external library)
     5                                  import exit msvcrt.dll  ; Specify that 'exit' is defined in the msvcrt.dll library
     6                                  
     7                                  section .data   ; Data section
     8                                       
     9 00000000 05                          a db 5
    10 00000001 03                          b db 3
    11 00000002 02                          c db 2
    12 00000003 00                          result db 0  ; Variable to store the result
    13                                      
    14                                  section .text   ; Code section
    15                                  start:
    16 00000000 A0[00000000]                mov al, [a]
    17 00000005 8A1D[01000000]              mov bl, [b]
    18 0000000B 8A0D[02000000]              mov cl, [c]
    19                                  
    20                                      
    21 00000011 00CB                        add bl, cl  ; b + c
    22                                      imul al, bl  ; a * (b + c)
    22          ******************       error: invalid combination of opcode and operands
    23 00000013 0422                        add al, 34  ; (a * (b + c)) + 34
    24                                  
    25                                      
    26 00000015 A2[03000000]                mov [result], al
    27                                      
    28                                      
    29                                      
    30                                  
    31                                  
    32                                      ; Call 'exit(0)' to end the program (0 represents a success status)
    33 0000001A 6A00                        push dword 0  ; Push the parameter (status code) onto the stack
    34 0000001C FF15[00000000]              call [exit]   ; Call the 'exit' function to exit the program
